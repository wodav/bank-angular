/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { Account } from '../models/account';
import { createAccount } from '../fn/user-accounts/create-account';
import { CreateAccount$Params } from '../fn/user-accounts/create-account';
import { usersIdAccountsGet } from '../fn/user-accounts/users-id-accounts-get';
import { UsersIdAccountsGet$Params } from '../fn/user-accounts/users-id-accounts-get';

@Injectable({ providedIn: 'root' })
export class UserAccountsService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `usersIdAccountsGet()` */
  static readonly UsersIdAccountsGetPath = '/users/{id}/accounts';

  /**
   * Returns a list of account.
   *
   * Optional extended description in CommonMark or HTML
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `usersIdAccountsGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  usersIdAccountsGet$Response(params: UsersIdAccountsGet$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<Account>>> {
    return usersIdAccountsGet(this.http, this.rootUrl, params, context);
  }

  /**
   * Returns a list of account.
   *
   * Optional extended description in CommonMark or HTML
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `usersIdAccountsGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  usersIdAccountsGet(params: UsersIdAccountsGet$Params, context?: HttpContext): Observable<Array<Account>> {
    return this.usersIdAccountsGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<Account>>): Array<Account> => r.body)
    );
  }

  /** Path part for operation `createAccount()` */
  static readonly CreateAccountPath = '/users/{id}/accounts';

  /**
   * Create Account.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `createAccount()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  createAccount$Response(params: CreateAccount$Params, context?: HttpContext): Observable<StrictHttpResponse<Account>> {
    return createAccount(this.http, this.rootUrl, params, context);
  }

  /**
   * Create Account.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `createAccount$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  createAccount(params: CreateAccount$Params, context?: HttpContext): Observable<Account> {
    return this.createAccount$Response(params, context).pipe(
      map((r: StrictHttpResponse<Account>): Account => r.body)
    );
  }

}
